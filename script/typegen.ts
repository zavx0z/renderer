import { $ } from "bun"
import { join } from "path"

export const typegen = async (entrypoint: string, destination: string) => {
  const isTTY = process.stdout.isTTY
  if (isTTY) {
    let spinnerActive = true
    const spinnerFrames = ["|", "/", "-", "\\"]
    let spinnerIndex = 0
    process.stdout.write("   ")
    const spinner = setInterval(() => {
      process.stdout.write(`\r${spinnerFrames[spinnerIndex++ % spinnerFrames.length]}  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–≤...`)
    }, 120)

    // –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∏–ø—ã –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    await $`dts-bundle-generator --out-file ${destination} --export-referenced-types true --inline-declare-global true --inline-declare-externals true ${entrypoint}`.quiet()

    spinnerActive = false
    clearInterval(spinner)
    process.stdout.write("\r‚úÖ –¢–∏–ø—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!           \n")
  } else {
    console.log("üõ†Ô∏è  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–≤...")
    // –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∏–ø—ã –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    await $`dts-bundle-generator --out-file ${destination} --export-referenced-types true --inline-declare-global true --inline-declare-externals true ${entrypoint}`.quiet()
    console.log("‚úÖ –¢–∏–ø—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
  }
}

if (import.meta.main) {
  const fileName = "index"
  const entrypoint = `./${fileName}.ts`
  const distDir = "./dist"
  const typeDest = join(distDir, `${fileName}.d.ts`)

  await typegen(entrypoint, typeDest)
}
